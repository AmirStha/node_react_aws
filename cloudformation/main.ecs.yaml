---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2
  TemplateBucket:
    Type: String
    Default: ecs-configuration
    Description: >
      The S3 bucket from which to fetch the templates used by this stack.
  BitNodeToken:
    Type: String
    Description: "Bit node token"
    Default: "test"
  CustomDeploymentTriggerBranch:
    Type: String
    Description: "The branch that is to be used for CodeBuild"
    Default: "master"
  CodeBuildRepositoryBranch:
    Type: String
    Description: "The branch that is to be used for CodeBuild"
    Default: "staging"
  TeamName:
    Type: String
    Description: "Team deploying the stack"
    Default: "test"
  AWSUserName:
    Type: String
    Description: "The user for principal aws ecr repo policy document"
    Default: "amir"

Resources:
  BottleVPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.amazonaws.com/templates/vpc.yaml"
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        Subnet1CIDR: 10.215.10.0/24
        Subnet2CIDR: 10.215.20.0/24
        TeamName: !Sub ${TeamName}
        AWSUserName: !Sub ${AWSUserName}
  BottleLoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.amazonaws.com/templates/load-balancer.yaml"
      Parameters:
        LaunchType: !Ref LaunchType
        Subnets: !GetAtt BottleVPCStack.Outputs.Subnets
        VpcId: !GetAtt BottleVPCStack.Outputs.VpcId
        TeamName: !Sub ${TeamName}
        AWSUserName: !Sub ${AWSUserName}
  BottleClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.amazonaws.com/templates/ecs-cluster.yaml"
      Parameters:
        LaunchType: !Ref LaunchType
        SourceSecurityGroup: !GetAtt BottleLoadBalancerStack.Outputs.SecurityGroup
        Subnets: !GetAtt BottleVPCStack.Outputs.Subnets
        VpcId: !GetAtt BottleVPCStack.Outputs.VpcId
        TeamName: !Sub ${TeamName}
        AWSUserName: !Sub ${AWSUserName}
  BottleService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.amazonaws.com/templates/ecs-service.yaml"
      Parameters:
        Cluster: !GetAtt BottleClusterStack.Outputs.ClusterName
        LaunchType: !Ref LaunchType
        TargetGroup: !GetAtt BottleLoadBalancerStack.Outputs.TargetGroup
        SourceSecurityGroup: !GetAtt BottleLoadBalancerStack.Outputs.SecurityGroup
        Subnets: !GetAtt BottleVPCStack.Outputs.Subnets
        TeamName: !Sub ${TeamName}
        AWSUserName: !Sub ${AWSUserName}
  BottleDeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.amazonaws.com/templates/deployment-pipeline.yaml"
      Parameters:
        Cluster: !GetAtt BottleClusterStack.Outputs.ClusterName
        Service: !GetAtt BottleService.Outputs.Service
        BitNodeToken: !Ref BitNodeToken
        TeamName: !Sub ${TeamName}
        AWSUserName: !Sub ${AWSUserName}
  # ResourceBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub ${AWS::StackName}-cicd-pipeline-bucket
  # S3PutObjectFunctionRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - "lambda.amazonaws.com"
  #           Action:
  #             - "sts.AssumeRole"
  #     ManagedPolicyArns:
  #       - Ref: "RoleBasePolicy"
  #     Policies:
  #       PolicyName: S3Writer
  #       PolicyDocument:
  #         Version: "2012-10-17"
  #         Statement:
  #           - Effect: "Allow"
  #             Action:
  #               - "s3:DeleteObject"
  #               - "s3:ListBucket"
  #               - "s3:PutObject"
  #             Resources: "*"
  # S3PutObjectFuntion:
  #   Type: AWS::Lambda:Function
  #   Properties:
  #     Code:
  #       ZipFile: |
